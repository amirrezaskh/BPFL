#!/bin/bash

# BPFL Documentation Commit and Push Script
# Commits and pushes README.md files to all experimental branches

echo "üöÄ BPFL Documentation Commit & Push Script"
echo "==========================================="

# Get current branch to return to later
ORIGINAL_BRANCH=$(git branch --show-current)
echo "üìç Current branch: $ORIGINAL_BRANCH"

# Get list of all experimental branches (excluding main and Centralized)
BRANCHES=$(git branch -r | grep -v HEAD | grep -v main | grep -v Centralized | sed 's/origin\///' | tr -d ' ')

# Convert to array
BRANCH_ARRAY=($BRANCHES)
TOTAL_BRANCHES=${#BRANCH_ARRAY[@]}

echo "üìù Found $TOTAL_BRANCHES experimental branches to process"

# Confirm before proceeding
read -p "Do you want to commit and push README.md to all $TOTAL_BRANCHES branches? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Operation cancelled"
    exit 1
fi

echo "üîÑ Starting commit and push process..."

SUCCESS_COUNT=0
FAILED_BRANCHES=()

for i in "${!BRANCH_ARRAY[@]}"; do
    BRANCH="${BRANCH_ARRAY[$i]}"
    BRANCH_NUM=$((i + 1))
    
    echo ""
    echo "üìù Processing branch $BRANCH_NUM/$TOTAL_BRANCHES: $BRANCH"
    
    # Checkout the branch
    if git checkout "$BRANCH" &>/dev/null; then
        echo "‚úÖ Switched to $BRANCH"
        
        # Check if README.md exists
        if [ -f "README.md" ]; then
            # Add README.md
            git add README.md
            
            # Check if there are changes to commit
            if git diff --cached --quiet; then
                echo "‚ÑπÔ∏è  No changes to commit in $BRANCH"
            else
                # Commit the changes
                if git commit -m "Add experiment-specific documentation

- Comprehensive experiment configuration details
- Dataset and architecture specifications  
- Data distribution analysis
- Running instructions and expected results
- Cross-references to related experiments

Generated by automated documentation system." &>/dev/null; then
                    echo "‚úÖ Committed changes to $BRANCH"
                    
                    # Push to origin
                    if git push origin "$BRANCH" &>/dev/null; then
                        echo "‚úÖ Pushed $BRANCH to origin"
                        SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
                    else
                        echo "‚ùå Failed to push $BRANCH"
                        FAILED_BRANCHES+=("$BRANCH (push failed)")
                    fi
                else
                    echo "‚ùå Failed to commit $BRANCH"
                    FAILED_BRANCHES+=("$BRANCH (commit failed)")
                fi
            fi
        else
            echo "‚ùå README.md not found in $BRANCH"
            FAILED_BRANCHES+=("$BRANCH (no README)")
        fi
    else
        echo "‚ùå Failed to checkout $BRANCH"
        FAILED_BRANCHES+=("$BRANCH (checkout failed)")
    fi
done

# Return to original branch
echo ""
echo "üîÑ Returning to original branch: $ORIGINAL_BRANCH"
git checkout "$ORIGINAL_BRANCH" &>/dev/null

# Summary
echo ""
echo "üéâ Documentation commit and push complete!"
echo "=========================================="
echo "‚úÖ Successfully processed: $SUCCESS_COUNT/$TOTAL_BRANCHES branches"

if [ ${#FAILED_BRANCHES[@]} -gt 0 ]; then
    echo "‚ùå Failed branches:"
    for failed in "${FAILED_BRANCHES[@]}"; do
        echo "   - $failed"
    done
else
    echo "üéä All branches processed successfully!"
fi

echo ""
echo "üìä Summary of changes:"
echo "   - Each experimental branch now has comprehensive documentation"
echo "   - README.md files include experiment-specific configurations"
echo "   - Cross-references between related experiments added"
echo "   - Running instructions and expected results documented"

echo ""
echo "üîó Next steps:"
echo "   - Review documentation in GitHub repository"
echo "   - Share branch-specific documentation with collaborators"  
echo "   - Use experiment-specific READMEs for research reproducibility"

echo ""
echo "‚ú® Your BPFL research framework is now fully documented across all branches!"
